<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxcXEtbW1vnW1tbnQAAAABbW1scWlpaVVpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVpa
        WlVaWlpVWlpaVVtbW21bW1uRW1tblVtbW/IAAAAAXFxcp1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uXAAAAAVpaWoJaWlppAAAAAFtbW7dbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9cXFyWAAAAAVtbW4ZbW1u7AAAAAAAAAABbW1u3W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uogICAAlpaWndbW1v/W1tbtwAAAAAAAAAAW1tbt1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1vHW1tbtFxcXJhbW1v/W1tb/1tbW7cAAAAAAAAAAFtbW7dbW1v/W1tb+ltb
        W7xbW1u7W1tbu1tbW9hbW1v/W1tbwlpaWsNbW1v/W1tb/1tbW/9bW1u3AAAAAAAAAABbW1u3W1tb/1tb
        W/VcXFycXFxcmVxcXJlcXFzDW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbtwAAAAAAAAAAW1tbt1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW7cAAAAAAAAAAFtb
        W7dbW1v/W1tb8FpaWlhaWlpVWlpaVVpaWlVaWlpVWlpaVVpaWlVcXFxZW1tb8VtbW/9bW1u3AAAAAAAA
        AABbW1u3W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbtwAA
        AAAAAAAAW1tbt1tbW/9bW1vwWlpaWFpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVxcXFlbW1vxW1tb/1tb
        W7cAAAAAAAAAAFtbW7dbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1u3AAAAAAAAAABbW1u2W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbtgAAAAAAAAAAW1tbUVtbW7dbW1u7W1tbu1tbW7tbW1u7W1tbu1tbW7tbW1u7W1tbu1tb
        W7tbW1u7W1tbtlpaWkoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/8AAD/+AAAgAUAAIAJAACAGQAAgAEAAIABAACAAQAAgAEAAI/x
        AACAAQAAj/EAAIABAACAAQAAwAMAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaJVtb
        W7tbW1voW1tbqV1dXRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZ
        WS5cXFzqW1tb/1tbW/9bW1v/W1tbswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABcXFwyW1tb7FxcXKdcXFykW1tb/1tbW/9bW1v1AAAAAAAAAAAAAAAAW1tbdltbW8hbW1vMW1tbzFtb
        W8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtb
        W8xbW1vMW1tbzFtbW/JbW1umVVVVA1VVVQNbW1ufW1tb/1tbW9QAAAAAAAAAAFpaWkpbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tbpVVVVQMAAAAAAAAAAFpaWo1bW1v8XFxcTgAAAAAAAAAAW1tbcFtb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW6VVVVUDAAAAAAAAAABcXFyOW1tb+1xcXFkAAAAAAAAAAAAA
        AABaWlpxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9cXFykVVVVAwAAAAAAAAAAXFxcjltbW/9aWlqCAAAAAAAA
        AAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlparGZmZgUAAAAAAAAAAFtbW4NbW1v/W1tb/1pa
        WnEAAAAAAAAAAAAAAAAAAAAAWlpacVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW6tmZmYFAAAAAAAAAABbW1uDW1tb/1tb
        W/9bW1v/WlpacQAAAAAAAAAAAAAAAAAAAABaWlpxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vNZmZmBQAAAAAAAAAAW1tbg1tb
        W/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAAAAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb0ltbW/1bW1twAAAAAVpa
        WpBbW1v/W1tb/1tbW/9bW1v/W1tb/1paWnEAAAAAAAAAAAAAAAAAAAAAWlpacVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlpSW1tbZVtb
        W/1bW1u8W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlpacQAAAAAAAAAAAAAAAAAAAABaWlpxW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb+V1d
        XRZdXV1CXFxcxFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAAAAAAAAAAAAAAAFpa
        WnFbW1v/W1tb/1tbW/9bW1v/XFxc6lxcXHpaWlp3Wlpad1paWndaWlp3Wlpad1tbW3lbW1vnW1tb/1tb
        W/9bW1v7W1tb91tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1paWnEAAAAAAAAAAAAA
        AAAAAAAAWlpacVtbW/9bW1v/W1tb/1tbW/9bW1vbXFxcS1paWkRaWlpEWlpaRFpaWkRaWlpEWlpaSltb
        W9VbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlpacQAA
        AAAAAAAAAAAAAAAAAABaWlpxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9aWlpxAAAAAAAAAAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1paWnEAAAAAAAAAAAAAAAAAAAAAWlpacVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb8Vtb
        W+5bW1vuW1tb7ltbW+5bW1vuW1tb7ltbW+5bW1vuW1tb7ltbW+5bW1vuW1tb7ltbW+5bW1vuW1tb8Vtb
        W/9bW1v/W1tb/1tbW/9bW1v/WlpacQAAAAAAAAAAAAAAAAAAAABaWlpxW1tb/1tbW/9bW1v/W1tb/1tb
        W8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAW1tbyltbW/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAAAAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tb
        W/9bW1v/W1tb/VtbW9NbW1vMW1tbzFtbW8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtbW8xbW1vMW1tbzFtb
        W8xbW1vMW1tbzFtbW9NbW1v9W1tb/1tbW/9bW1v/W1tb/1paWnEAAAAAAAAAAAAAAAAAAAAAWlpacVtb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlpacQAAAAAAAAAAAAAAAAAA
        AABaWlpxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAA
        AAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tbW/9bW1v/W1tb5VpaWmlaWlpmWlpaZlpaWmZaWlpmWlpaZlpa
        WmZaWlpmWlpaZlpaWmZaWlpmWlpaZlpaWmZaWlpmWlpaZlpaWmlbW1vmW1tb/1tbW/9bW1v/W1tb/1pa
        WnEAAAAAAAAAAAAAAAAAAAAAWlpacVtbW/9bW1v/W1tb/1tbW/9bW1vgWVlZTVpaWkRaWlpEWlpaRFpa
        WkRaWlpEWlpaRFpaWkRaWlpEWlpaRFpaWkRaWlpEWlpaRFpaWkRaWlpEWVlZTVtbW+BbW1v/W1tb/1tb
        W/9bW1v/WlpacQAAAAAAAAAAAAAAAAAAAABaWlpxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAAAAAAAAAAAAAAAFpaWnFbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1paWnEAAAAAAAAAAAAAAAAAAAAAWlpacVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlpacQAAAAAAAAAAAAAAAAAAAABbW1trW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1tqAAAAAAAAAAAAAAAAAAAAAF1d
        XSlbW1v3W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb91xcXCcAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlZWShbW1ttWlpad1paWndaWlp3Wlpad1paWndaWlp3Wlpad1paWndaWlp3Wlpad1pa
        WndaWlp3Wlpad1paWndaWlp3Wlpad1paWndaWlp3Wlpad1paWndaWlp3Wlpad1tbW21ZWVkoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////H////g////wPAAABjgAAA54AAAc+AAAOPgAAHH4AADh+AA
        BwfgAAYH4AAYB+AAGAfg/gAH4P4AB+AAAAfgAAAH4AAAB+D//wfgAAAH4AAAB+AAAAfg//8H4P//B+AA
        AAfgAAAH4AAAB+AAAAfgAAAH////////////////
</value>
  </data>
</root>